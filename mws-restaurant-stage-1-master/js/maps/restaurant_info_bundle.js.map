{"version":3,"sources":["restaurant_info_bundle.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","obj","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_idb","dbPromise","__esModule","default","open","upgradeDb","oldVersion","createObjectStore","keyPath","DBHelper","instance","TypeError","_classCallCheck","this","value","callback","fetch","DATABASE_URL","then","res","json","out","restaurants","navigator","serviceWorker","db","store","transaction","objectStore","forEach","restaurant","put","catch","err","console","error","id","Promise","resolve","reject","fetchIDBReviews","data","onLine","ok","status","updateRestaurantReview","getAll","review","tx","restaurant_id","parseInt","complete","name","rating","comment","offlineReview","comments","fetchRestaurants","find","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","google","maps","Marker","position","latlng","title","url","urlForRestaurant","animation","Animation","DROP","post","method","body","JSON","stringify","response","get","postReview","delete","restaurantId","isFavorite","idb","2","_dbhelper","_dbhelper2","interval","window","initMap","fetchRestaurantFromURL","self","Map","document","getElementById","zoom","center","scrollwheel","fillBreadcrumb","mapMarkerForRestaurant","getParameterByName","fetchRestaurantById","fillRestaurantHTML","arguments","undefined","innerHTML","address","image","className","setAttribute","imageUrlForRestaurant","split","pop","src","addEventListener","getElementsByTagName","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","row","createElement","day","appendChild","time","container","ul","fetchReviewsById","reviews","noReviews","reverse","createReviewHTML","setReviewForm","li","date","Date","updatedAt","toDateString","form","textArea","sendButton","input","label","type","placeholder","required","append","ratingOptions","setFormListener","ratingDiv","classList","add","htmlFor","rateList","option","text","selected","event","preventDefault","stripHtmlTags","reviewText","ratingValue","querySelector","reset","alert","insertBefore","childNodes","log","saveReviewOffline","setInterval","clearInterval","postReviewOffline","breadcrumb","location","href","replace","RegExp","exec","decodeURIComponent","string","./dbhelper","3","promisifyRequest","request","onsuccess","result","onerror","promisifyRequestCall","args","apply","proxyProperties","ProxyClass","targetProp","properties","prop","set","val","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","arr","Array","slice","nativeObject","query","count","items","iterateCursor","push","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAEA,IAMgCK,EAN5BC,EAAe,WAAc,SAASC,EAAiBC,EAAQC,GAAS,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAMP,OAAQX,IAAK,CAAE,IAAImB,EAAaD,EAAMlB,GAAImB,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAAiB,OAAO,SAAUO,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYX,EAAiBU,EAAYG,UAAWF,GAAiBC,GAAaZ,EAAiBU,EAAaE,GAAqBF,GAA7gB,GAEfI,EAAO3B,EAAQ,OAQnB,IAAI4B,IAJ4BjB,EAFGgB,IAEkBhB,EAAIkB,WAAalB,EAAM,CAAEmB,QAASnB,IAIjEmB,QAAQC,KAAK,iBAAkB,EAAG,SAAUC,GAChE,OAAQA,EAAUC,YAChB,KAAK,EACHD,EAAUE,kBAAkB,cAAe,CAAEC,QAAS,OACxD,KAAK,EACHH,EAAUE,kBAAkB,UAAW,CAAEC,QAAS,kBACpD,KAAK,EACHH,EAAUE,kBAAkB,kBAAmB,CAAEC,QAAS,qBAI5DC,EAAW,WACb,SAASA,KAdX,SAAyBC,EAAUd,GAAe,KAAMc,aAAoBd,GAAgB,MAAM,IAAIe,UAAU,qCAe5GC,CAAgBC,KAAMJ,GA0ZxB,OAvZAxB,EAAawB,EAAU,KAAM,CAAC,CAC5Bd,IAAK,mBAMLmB,MAAO,SAA0BC,GAE/BC,MAAMP,EAASQ,aAAe,gBAAgBC,KAAK,SAAUC,GAC3D,OAAOA,EAAIC,SACVF,KAAK,SAAUG,GAChB,IAAIC,EAAcD,EAEdE,UAAUC,eACZvB,EAAUiB,KAAK,SAAUO,GACvB,GAAKA,EAAL,CAEA,IACIC,EADKD,EAAGE,YAAY,cAAe,aACxBC,YAAY,eAE3BN,EAAYO,QAAQ,SAAUC,GAC5B,OAAOJ,EAAMK,IAAID,QAIvBf,EAAS,KAAMO,KACdU,MAAM,SAAUC,GACjB,OAAOC,QAAQC,MAAMF,OAQxB,CACDtC,IAAK,mBACLmB,MAAO,SAA0BsB,GAC/B,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAEpC9B,EAAS+B,kBAAkBtB,KAAK,SAAUuB,GAEnClB,UAAUmB,OAGb1B,MAAMP,EAASQ,aAAe,2BAA6BmB,GAAIlB,KAAK,SAAUuB,GAC5E,GAAIA,EAAKE,GACP,OAAOF,EAAKrB,OAEdmB,EAAO,IAAI/D,MAAM,uBAAyBiE,EAAKG,WAC9C1B,KAAK,SAAUuB,GAChBhC,EAASoC,uBAAuBJ,GAChCH,EAAQG,KACPT,MAAM,SAAUC,GACjBM,EAAON,KAXTK,EAAQG,EAAK,UAsBpB,CACD9C,IAAK,kBACLmB,MAAO,WAEL,OAAOb,EAAUiB,KAAK,SAAUO,GAC9B,OAAKA,EAEIA,EAAGE,YAAY,WACTC,YAAY,WAEdkB,SALGrB,MAanB,CACD9B,IAAK,yBACLmB,MAAO,SAAgCiC,GACrC9C,EAAUiB,KAAK,SAAUO,GACvB,IAAKA,EAAI,OAAOA,EAEhB,IAAIuB,EAAKvB,EAAGE,YAAY,UAAW,aAC/BD,EAAQsB,EAAGpB,YAAY,WAK3B,OAHAmB,EAAOE,cAAgBC,SAASH,EAAO,GAAGE,eAC1CvB,EAAMK,IAAIgB,GAEHC,EAAGG,aAQb,CACDxD,IAAK,oBACLmB,MAAO,SAA2BsB,EAAIgB,EAAMC,EAAQC,GAClD,IAAIC,EAAgB,CAAEN,cAAeb,EAAIgB,KAAMA,EAAMC,OAAQA,EAAQG,SAAUF,GAE/ErD,EAAUiB,KAAK,SAAUO,GACvB,GAAKA,EAAL,CAEA,IAAIuB,EAAKvB,EAAGE,YAAY,kBAAmB,aAK3C,OAJYqB,EAAGpB,YAAY,mBAErBG,IAAIwB,GAEHP,EAAGG,cAQb,CACDxD,IAAK,sBACLmB,MAAO,SAA6BsB,EAAIrB,GAEtCN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CACL,IAAIL,EAAaR,EAAYoC,KAAK,SAAU7F,GAC1C,OAAOA,EAAEuE,IAAMA,IAEbN,EAEFf,EAAS,KAAMe,GAGff,EAAS,4BAA6B,WAU7C,CACDpB,IAAK,2BACLmB,MAAO,SAAkC6C,EAAS5C,GAEhDN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAIyB,EAAUtC,EAAYuC,OAAO,SAAUhG,GACzC,OAAOA,EAAEiG,cAAgBH,IAE3B5C,EAAS,KAAM6C,QASpB,CACDjE,IAAK,gCACLmB,MAAO,SAAuCiD,EAAchD,GAE1DN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAIyB,EAAUtC,EAAYuC,OAAO,SAAUhG,GACzC,OAAOA,EAAEkG,cAAgBA,IAE3BhD,EAAS,KAAM6C,QASpB,CACDjE,IAAK,0CACLmB,MAAO,SAAiD6C,EAASI,EAAchD,GAE7EN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CACL,IAAIyB,EAAUtC,EACC,OAAXqC,IAEFC,EAAUA,EAAQC,OAAO,SAAUhG,GACjC,OAAOA,EAAEiG,cAAgBH,KAGT,OAAhBI,IAEFH,EAAUA,EAAQC,OAAO,SAAUhG,GACjC,OAAOA,EAAEkG,cAAgBA,KAG7BhD,EAAS,KAAM6C,QASpB,CACDjE,IAAK,qBACLmB,MAAO,SAA4BC,GAEjCN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAI6B,EAAgB1C,EAAY2C,IAAI,SAAUC,EAAGhG,GAC/C,OAAOoD,EAAYpD,GAAG6F,eAGpBI,EAAsBH,EAAcH,OAAO,SAAUK,EAAGhG,GAC1D,OAAO8F,EAAcI,QAAQF,IAAMhG,IAErC6C,EAAS,KAAMoD,QASpB,CACDxE,IAAK,gBACLmB,MAAO,SAAuBC,GAE5BN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAIkC,EAAW/C,EAAY2C,IAAI,SAAUC,EAAGhG,GAC1C,OAAOoD,EAAYpD,GAAG4F,eAGpBQ,EAAiBD,EAASR,OAAO,SAAUK,EAAGhG,GAChD,OAAOmG,EAASD,QAAQF,IAAMhG,IAEhC6C,EAAS,KAAMuD,QASpB,CACD3E,IAAK,mBACLmB,MAAO,SAA0BgB,GAC/B,MAAO,wBAA0BA,EAAWM,KAO7C,CACDzC,IAAK,wBACLmB,MAAO,SAA+BgB,GACpC,MAAO,QAAUA,EAAWyC,WAAa,SAO1C,CACD5E,IAAK,yBACLmB,MAAO,SAAgCgB,EAAYmC,GAQjD,OAPa,IAAIO,OAAOC,KAAKC,OAAO,CAClCC,SAAU7C,EAAW8C,OACrBC,MAAO/C,EAAWsB,KAClB0B,IAAKrE,EAASsE,iBAAiBjD,GAC/BmC,IAAKA,EACLe,UAAWR,OAAOC,KAAKQ,UAAUC,SASpC,CACDvF,IAAK,aACLmB,MAAO,SAAoBsB,EAAIgB,EAAMC,EAAQC,GAE3C,IAAI6B,EAAO,CAAElC,cAAeb,EAAIgB,KAAMA,EAAMC,OAAQA,EAAQG,SAAUF,GACtE,OAAO,IAAIjB,QAAQ,SAAUC,EAASC,GACpCvB,MAAMP,EAASQ,aAAe,WAAY,CACxCmE,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KACpBjE,KAAK,SAAUsE,GACZA,EAAS7C,KACXlC,EAASoC,uBAAuBsC,GAChC7C,EAAQkD,EAASpE,SAEnBmB,EAAO,IAAI/D,MAAM,uBAAyBgH,EAAS5C,WAClDZ,MAAM,SAAUC,GACjBM,EAAON,SASZ,CACDtC,IAAK,oBACLmB,MAAO,SAA2BsB,GAChC,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAEpCtC,EAAUiB,KAAK,SAAUO,GACvB,GAAKA,EAKL,OAHSA,EAAGE,YAAY,mBACTC,YAAY,mBAEd6D,IAAIrD,KAChBlB,KAAK,SAAU6B,GAChBtC,EAASiF,WAAW3C,EAAOE,cAAeF,EAAOK,KAAML,EAAOM,OAAQN,EAAOS,UAAUtC,KAAK,SAAUuB,GACpGxC,EAAUiB,KAAK,SAAUO,GACvB,IAAIuB,EAAKvB,EAAGE,YAAY,kBAAmB,aAK3C,OAJYqB,EAAGpB,YAAY,mBAErB+D,OAAOvD,GAENY,EAAGG,WAEZb,EAAQG,KACPT,MAAM,SAAUC,GACjBM,EAAON,WAUd,CACDtC,IAAK,cACLmB,MAAO,SAAqB8E,EAAcC,GAQxC,OALEA,EADiB,UAAfA,EAMG,IAAIxD,QAAQ,SAAUC,EAASC,GACpCvB,MAAMP,EAASQ,aAAe,gBAAkB2E,EAAe,iBAAmBC,EAAY,CAC5FT,OAAQ,QACPlE,KAAK,SAAUsE,GACZA,EAAS7C,GACXL,EAAQkD,EAASpE,QAEjBmB,EAAO,IAAI/D,MAAM,wBAA0B2C,IAAIyB,WAEhDZ,MAAM,SAAUC,GACjBM,EAAON,SAIZ,CACDtC,IAAK,eAML8F,IAAK,WAGH,MAAO,4BAIJhF,EA5ZM,GA+Zf1B,EAAOJ,QAAU8B,GAEf,CAACqF,IAAM,IAAIC,EAAE,CAAC,SAAS1H,EAAQU,EAAOJ,GACxC,aAEA,IAIgCK,EAJ5BgH,EAAY3H,EAAQ,cAEpB4H,GAE4BjH,EAFQgH,IAEahH,EAAIkB,WAAalB,EAAM,CAAEmB,QAASnB,GAEvF,IAGIkH,OAAW,EAKfC,OAAOC,QAAU,WACfC,EAAuB,SAAUlE,EAAOL,GAClCK,EAEFD,QAAQC,MAAMA,IAEdmE,KAAKrC,IAAM,IAAIO,OAAOC,KAAK8B,IAAIC,SAASC,eAAe,OAAQ,CAC7DC,KAAM,GACNC,OAAQ7E,EAAW8C,OACnBgC,aAAa,IAEfC,IACAZ,EAAW9F,QAAQ2G,uBAAuBR,KAAKxE,WAAYwE,KAAKrC,SAQtE,IAAIoC,EAAyB,SAAgCtF,GAC3D,GAAIuF,KAAKxE,WAEPf,EAAS,KAAMuF,KAAKxE,gBAFtB,CAKA,IAAIM,EAAK2E,EAAmB,MACvB3E,EAKH6D,EAAW9F,QAAQ6G,oBAAoB5E,EAAI,SAAUD,EAAOL,IAC1DwE,KAAKxE,WAAaA,IAKlBmF,IACAlG,EAAS,KAAMe,IAJbI,QAAQC,MAAMA,MANlBA,MAAQ,0BACRpB,EAASoB,MAAO,SAiBhB8E,EAAqB,WACvB,IAAInF,EAAgC,EAAnBoF,UAAUrI,QAAcqI,UAAU,KAAOC,EAAYD,UAAU,GAAKZ,KAAKxE,WAE/E0E,SAASC,eAAe,mBAC9BW,UAAYtF,EAAWsB,KAEdoD,SAASC,eAAe,sBAC9BW,UAAYtF,EAAWuF,QAE/B,IAAIC,EAAQd,SAASC,eAAe,kBACpCa,EAAMC,UAAY,iBAClBD,EAAME,aAAa,MAAO,aAAgB1F,EAAWsB,KAAO,gBAE5D,IAAI+D,EAAYlB,EAAW9F,QAAQsH,sBAAsB3F,GAAY4F,MAAM,KAAKC,MAEhFL,EAAMM,IAAM3B,EAAW9F,QAAQsH,sBAAsB3F,GACf,GAAlCqF,EAAU/C,QAAQ,eACpBkD,EAAMM,IAAM,wBAGApB,SAASC,eAAe,sBAC9BW,UAAYtF,EAAWgC,aAE/BqC,OAAO0B,iBAAiB,OAAQ,WACpBrB,SAASC,eAAe,OAC9BqB,qBAAqB,UAAU,GAAGjD,MAAQ/C,EAAWuF,UAIvDvF,EAAWiG,iBACbC,IAGFC,KAMED,EAA0B,WAC5B,IAAIE,EAAoC,EAAnBhB,UAAUrI,aAA+BsI,IAAjBD,UAAU,GAAmBA,UAAU,GAAKZ,KAAKxE,WAAWiG,gBAErGI,EAAQ3B,SAASC,eAAe,oBACpC,IAAK,IAAI9G,KAAOuI,EAAgB,CAC9B,IAAIE,EAAM5B,SAAS6B,cAAc,MAE7BC,EAAM9B,SAAS6B,cAAc,MACjCC,EAAIlB,UAAYzH,EAChByI,EAAIG,YAAYD,GAEhB,IAAIE,EAAOhC,SAAS6B,cAAc,MAClCG,EAAKpB,UAAYc,EAAevI,GAChCyI,EAAIG,YAAYC,GAEhBL,EAAMI,YAAYH,KAOlBH,EAAkB,WACpB,IAAIQ,EAAYjC,SAASC,eAAe,qBACpC5B,EAAQ2B,SAAS6B,cAAc,MACnCxD,EAAMuC,UAAY,UAClBqB,EAAUF,YAAY1D,GACtB,IAAI6D,OAAK,EACLtG,EAAK2E,EAAmB,MAC5Bd,EAAW9F,QAAQwI,iBAAiBvG,GAAIlB,KAAK,SAAU0H,GACrD,GAAsB,GAAlBA,EAAQ/J,OAAa,CACvB,IAAIgK,EAAYrC,SAAS6B,cAAc,KACvCQ,EAAUzB,UAAY,oCACtBqB,EAAUF,YAAYM,QAEtBH,EAAKlC,SAASC,eAAe,gBAC7BmC,EAAQE,UAAUjH,QAAQ,SAAUkB,GAClC2F,EAAGH,YAAYQ,EAAiBhG,MAElC0F,EAAUF,YAAYG,GAGxBM,EAAcP,EAAWG,EAASF,KACjC1G,MAAM,SAAUC,GACjBC,QAAQC,MAAMF,MAOd8G,EAAmB,SAA0BhG,GAC/C,IAAIkG,EAAKzC,SAAS6B,cAAc,MAC5BjF,EAAOoD,SAAS6B,cAAc,KAClCjF,EAAKgE,UAAYrE,EAAOK,KACxB6F,EAAGV,YAAYnF,GAEf,IAAI8F,EAAO1C,SAAS6B,cAAc,KAClCa,EAAK9B,UAAY,IAAI+B,KAAKpG,EAAOqG,WAAWC,eAC5CJ,EAAGV,YAAYW,GAEf,IAAI7F,EAASmD,SAAS6B,cAAc,KACpChF,EAAO+D,UAAY,WAAarE,EAAOM,OACvC4F,EAAGV,YAAYlF,GAEf,IAAIG,EAAWgD,SAAS6B,cAAc,KAItC,OAHA7E,EAAS4D,UAAYrE,EAAOS,SAC5ByF,EAAGV,YAAY/E,GAERyF,GAGLD,EAAgB,SAAuBP,EAAW3G,EAAY4G,GAChE,IAAIY,EAAO9C,SAAS6B,cAAc,QAC9BkB,EAAW/C,SAAS6B,cAAc,YAClCmB,EAAahD,SAAS6B,cAAc,UACpCoB,EAAQjD,SAAS6B,cAAc,SAC/BqB,EAAQlD,SAAS6B,cAAc,SAEnCqB,EAAMlC,aAAa,MAAO,QAC1BkC,EAAMtC,UAAY,cAElBqC,EAAME,KAAO,OACbF,EAAMrH,GAAK,OACXqH,EAAMG,YAAc,YACpBH,EAAMI,UAAW,EAEjBN,EAASnH,GAAK,cACdmH,EAASK,YAAc,sCACvBL,EAASM,UAAW,EACpBN,EAAS/B,aAAa,aAAc,wCAEpCgC,EAAWG,KAAO,SAClBH,EAAWpC,UAAY,OACvBoC,EAAWhC,aAAa,aAAc,QAEtC8B,EAAKlH,GAAK,cAEVkH,EAAKQ,OAAOJ,GACZJ,EAAKQ,OAAOL,GACZH,EAAKQ,OAAOP,GACZD,EAAKQ,OAAOC,KACZT,EAAKQ,OAAON,GAEZf,EAAUF,YAAYe,GAEtBU,EAAgBV,EAAMxH,EAAWM,GAAIsG,IAInCqB,EAAgB,WAClB,IAAIE,EAAYzD,SAAS6B,cAAc,OACnCqB,EAAQlD,SAAS6B,cAAc,SACnCqB,EAAMtC,UAAY,oBAClB6C,EAAU1B,YAAYmB,GACtBO,EAAUC,UAAUC,IAAI,oBACxBT,EAAMU,QAAU,SAEhB,IAAIC,EAAW7D,SAAS6B,cAAc,UACtCgC,EAASjI,GAAK,OACdiI,EAASjH,KAAO,SAChBiH,EAASR,UAAW,EACpB,IAAK,IAAI3L,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAIoM,EAAS9D,SAAS6B,cAAc,UAC1B,IAANnK,GACFoM,EAAOxJ,MAAQ,IACfwJ,EAAOC,KAAO,IACdD,EAAOE,UAAW,IAGlBF,EAAOxJ,MAAQ5C,EACfoM,EAAOC,KAAOrM,GAHdmM,EAAS9B,YAAY+B,GASzB,OAFAL,EAAU1B,YAAY8B,GAEfJ,GAGLD,EAAkB,SAAyBV,EAAMlH,EAAIsG,GACvDY,EAAKzB,iBAAiB,SAAU,SAAU4C,GACxCA,EAAMC,iBACN,IAAItH,EAAOuH,EAAcnE,SAASC,eAAe,QAAQ3F,OACrD8J,EAAaD,EAAcnE,SAASC,eAAe,eAAe3F,OAClE+J,EAAcrE,SAASsE,cAAc,wBAAwBhK,MAC7DuC,OAAS,EACb,GAAoB,MAAhBwH,EAAJ,CACExH,EAASH,SAAS2H,GAMpB,IAKgBzI,EAAIgB,EAAMC,EAAQuH,EAAYlC,EAAIY,EAL9ClH,EAAKc,SAAS6D,EAAmB,OAKrB3E,EAJLA,EAISgB,EAJLA,EAIWC,EAJLA,EAIauH,EAJLA,EAIiBlC,EAJLA,EAISY,EAJLA,EAM3C/H,UAAUmB,OACZuD,EAAW9F,QAAQuF,WAAWtD,EAAIgB,EAAMC,EAAQuH,GAAY1J,KAAK,SAAUuB,GACzE6G,EAAKyB,QACLC,MAAM,qBACNtC,EAAGuC,aAAalC,EAAiBtG,GAAOiG,EAAGwC,WAAW,MACrDlJ,MAAM,SAAUC,GACjBC,QAAQiJ,IAAIlJ,MAGd+I,MAAM,yFAA0F,KAChG/E,EAAW9F,QAAQiL,kBAAkBhJ,EAAIgB,EAAMC,EAAQuH,GACvD1E,EAAWmF,YAAY,WAM3B,IAAkBjJ,EAAIsG,EAAIY,EAARlH,EALHA,EAKOsG,EALHA,EAKOY,EALHA,EAMjB/H,UAAUmB,SACZsI,MAAM,kBAAmB,KACzBM,cAAcpF,GACdD,EAAW9F,QAAQoL,kBAAkBnJ,GAAIlB,KAAK,SAAUuB,GACtDuI,MAAM,qBACN1B,EAAKyB,QACLrC,EAAGuC,aAAalC,EAAiBtG,GAAOiG,EAAGwC,WAAW,QAXrD,WAxBDF,MAAM,qBAMP,IAqCL,IAAInE,EAAiB,WACnB,IAAI/E,EAAgC,EAAnBoF,UAAUrI,aAA+BsI,IAAjBD,UAAU,GAAmBA,UAAU,GAAKZ,KAAKxE,WAEtF0J,EAAahF,SAASC,eAAe,cACrCwC,EAAKzC,SAAS6B,cAAc,MAChCY,EAAG7B,UAAYtF,EAAWsB,KAC1BoI,EAAWjD,YAAYU,IAMrBlC,EAAqB,SAA4B3D,EAAM0B,GACpDA,IAAKA,EAAMqB,OAAOsF,SAASC,MAChCtI,EAAOA,EAAKuI,QAAQ,UAAW,QAC/B,IACI/H,EADQ,IAAIgI,OAAO,OAASxI,EAAO,qBACnByI,KAAK/G,GACzB,OAAKlB,EACAA,EAAQ,GACNkI,mBAAmBlI,EAAQ,GAAG+H,QAAQ,MAAO,MAD5B,GADH,MASnBhB,EAAgB,SAAuBoB,GACzC,OAAOA,EAAOJ,QAAQ,gBAAiB,MAGvC,CAACK,aAAa,IAAIC,EAAE,CAAC,SAAS5N,EAAQU,EAAOJ,GAC/C,cAEC,WAKC,SAASuN,EAAiBC,GACxB,OAAO,IAAI9J,QAAQ,SAASC,EAASC,GACnC4J,EAAQC,UAAY,WAClB9J,EAAQ6J,EAAQE,SAGlBF,EAAQG,QAAU,WAChB/J,EAAO4J,EAAQhK,UAKrB,SAASoK,EAAqBvN,EAAKoG,EAAQoH,GACzC,IAAIL,EACAzN,EAAI,IAAI2D,QAAQ,SAASC,EAASC,GAEpC2J,EADAC,EAAUnN,EAAIoG,GAAQqH,MAAMzN,EAAKwN,IACPtL,KAAKoB,EAASC,KAI1C,OADA7D,EAAEyN,QAAUA,EACLzN,EAWT,SAASgO,EAAgBC,EAAYC,EAAYC,GAC/CA,EAAWhL,QAAQ,SAASiL,GAC1BrN,OAAOC,eAAeiN,EAAW5M,UAAW+M,EAAM,CAChDrH,IAAK,WACH,OAAO5E,KAAK+L,GAAYE,IAE1BC,IAAK,SAASC,GACZnM,KAAK+L,GAAYE,GAAQE,OAMjC,SAASC,EAAoBN,EAAYC,EAAYhN,EAAaiN,GAChEA,EAAWhL,QAAQ,SAASiL,GACpBA,KAAQlN,EAAYG,YAC1B4M,EAAW5M,UAAU+M,GAAQ,WAC3B,OAAOP,EAAqB1L,KAAK+L,GAAaE,EAAM5F,eAK1D,SAASgG,EAAaP,EAAYC,EAAYhN,EAAaiN,GACzDA,EAAWhL,QAAQ,SAASiL,GACpBA,KAAQlN,EAAYG,YAC1B4M,EAAW5M,UAAU+M,GAAQ,WAC3B,OAAOjM,KAAK+L,GAAYE,GAAML,MAAM5L,KAAK+L,GAAa1F,eAK5D,SAASiG,EAA0BR,EAAYC,EAAYhN,EAAaiN,GACtEA,EAAWhL,QAAQ,SAASiL,GACpBA,KAAQlN,EAAYG,YAC1B4M,EAAW5M,UAAU+M,GAAQ,WAC3B,OA3C8B9N,EA2CI6B,KAAK+L,IA1CvClO,EAAI6N,EAAqBvN,EA0C2B8N,EAAM5F,YAzCrDhG,KAAK,SAASJ,GACrB,GAAKA,EACL,OAAO,IAAIsM,EAAOtM,EAAOpC,EAAEyN,WAJ/B,IAAoCnN,EAC9BN,MA+CN,SAAS2O,EAAMC,GACbzM,KAAK0M,OAASD,EAuBhB,SAASF,EAAOI,EAAQrB,GACtBtL,KAAK4M,QAAUD,EACf3M,KAAK6M,SAAWvB,EA+BlB,SAASwB,EAAYjM,GACnBb,KAAK+M,OAASlM,EAuChB,SAASmM,EAAYC,GACnBjN,KAAKkN,IAAMD,EACXjN,KAAKsC,SAAW,IAAId,QAAQ,SAASC,EAASC,GAC5CuL,EAAeE,WAAa,WAC1B1L,KAEFwL,EAAexB,QAAU,WACvB/J,EAAOuL,EAAe3L,QAExB2L,EAAeG,QAAU,WACvB1L,EAAOuL,EAAe3L,UAkB5B,SAAS+L,EAAUzM,EAAInB,EAAYqB,GACjCd,KAAKsN,IAAM1M,EACXZ,KAAKP,WAAaA,EAClBO,KAAKc,YAAc,IAAIkM,EAAYlM,GAkBrC,SAASyM,EAAG3M,GACVZ,KAAKsN,IAAM1M,EA/IbiL,EAAgBW,EAAO,SAAU,CAC/B,OACA,UACA,aACA,WAGFJ,EAAoBI,EAAO,SAAUgB,SAAU,CAC7C,MACA,SACA,SACA,aACA,UAGFlB,EAA0BE,EAAO,SAAUgB,SAAU,CACnD,aACA,kBAQF3B,EAAgBU,EAAQ,UAAW,CACjC,YACA,MACA,aACA,UAGFH,EAAoBG,EAAQ,UAAWkB,UAAW,CAChD,SACA,WAIF,CAAC,UAAW,WAAY,sBAAsBzM,QAAQ,SAAS0M,GACvDA,KAAcD,UAAUvO,YAC9BqN,EAAOrN,UAAUwO,GAAc,WAC7B,IAAIf,EAAS3M,KACT2L,EAAOtF,UACX,OAAO7E,QAAQC,UAAUpB,KAAK,WAE5B,OADAsM,EAAOC,QAAQc,GAAY9B,MAAMe,EAAOC,QAASjB,GAC1CN,EAAiBsB,EAAOE,UAAUxM,KAAK,SAASJ,GACrD,GAAKA,EACL,OAAO,IAAIsM,EAAOtM,EAAO0M,EAAOE,kBAUxCC,EAAY5N,UAAUyO,YAAc,WAClC,OAAO,IAAInB,EAAMxM,KAAK+M,OAAOY,YAAY/B,MAAM5L,KAAK+M,OAAQ1G,aAG9DyG,EAAY5N,UAAUuN,MAAQ,WAC5B,OAAO,IAAID,EAAMxM,KAAK+M,OAAON,MAAMb,MAAM5L,KAAK+M,OAAQ1G,aAGxDwF,EAAgBiB,EAAa,SAAU,CACrC,OACA,UACA,aACA,kBAGFV,EAAoBU,EAAa,SAAUc,eAAgB,CACzD,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGFtB,EAA0BQ,EAAa,SAAUc,eAAgB,CAC/D,aACA,kBAGFvB,EAAaS,EAAa,SAAUc,eAAgB,CAClD,gBAkBFZ,EAAY9N,UAAU6B,YAAc,WAClC,OAAO,IAAI+L,EAAY9M,KAAKkN,IAAInM,YAAY6K,MAAM5L,KAAKkN,IAAK7G,aAG9DwF,EAAgBmB,EAAa,MAAO,CAClC,mBACA,SAGFX,EAAaW,EAAa,MAAOa,eAAgB,CAC/C,UASFR,EAAUnO,UAAUQ,kBAAoB,WACtC,OAAO,IAAIoN,EAAY9M,KAAKsN,IAAI5N,kBAAkBkM,MAAM5L,KAAKsN,IAAKjH,aAGpEwF,EAAgBwB,EAAW,MAAO,CAChC,OACA,UACA,qBAGFhB,EAAagB,EAAW,MAAOS,YAAa,CAC1C,oBACA,UAOFP,EAAGrO,UAAU4B,YAAc,WACzB,OAAO,IAAIkM,EAAYhN,KAAKsN,IAAIxM,YAAY8K,MAAM5L,KAAKsN,IAAKjH,aAG9DwF,EAAgB0B,EAAI,MAAO,CACzB,OACA,UACA,qBAGFlB,EAAakB,EAAI,MAAOO,YAAa,CACnC,UAKF,CAAC,aAAc,iBAAiB9M,QAAQ,SAAS+M,GAC/C,CAACjB,EAAaN,GAAOxL,QAAQ,SAASjC,GACpCA,EAAYG,UAAU6O,EAASjD,QAAQ,OAAQ,YAAc,WAC3D,IApPWkD,EAoPPrC,GApPOqC,EAoPQ3H,UAnPhB4H,MAAM/O,UAAUgP,MAAMnQ,KAAKiQ,IAoP1B9N,EAAWyL,EAAKA,EAAK3N,OAAS,GAC9BmQ,EAAenO,KAAK+M,QAAU/M,KAAK0M,OACnCpB,EAAU6C,EAAaJ,GAAUnC,MAAMuC,EAAcxC,EAAKuC,MAAM,GAAI,IACxE5C,EAAQC,UAAY,WAClBrL,EAASoL,EAAQE,cAOzB,CAACgB,EAAOM,GAAa9L,QAAQ,SAASjC,GAChCA,EAAYG,UAAU+C,SAC1BlD,EAAYG,UAAU+C,OAAS,SAASmM,EAAOC,GAC7C,IAAIxO,EAAWG,KACXsO,EAAQ,GAEZ,OAAO,IAAI9M,QAAQ,SAASC,GAC1B5B,EAAS0O,cAAcH,EAAO,SAASzB,GAChCA,GAIL2B,EAAME,KAAK7B,EAAO1M,YAEJqG,IAAV+H,GAAuBC,EAAMtQ,QAAUqQ,EAI3C1B,EAAO8B,WAHLhN,EAAQ6M,IANR7M,EAAQ6M,WAelB,IAAII,EAAM,CACRnP,KAAM,SAASgD,EAAMoM,EAASC,GAC5B,IAAI/Q,EAAI6N,EAAqBmD,UAAW,OAAQ,CAACtM,EAAMoM,IACnDrD,EAAUzN,EAAEyN,QAQhB,OANAA,EAAQwD,gBAAkB,SAASlF,GAC7BgF,GACFA,EAAgB,IAAIvB,EAAU/B,EAAQE,OAAQ5B,EAAMnK,WAAY6L,EAAQxK,eAIrEjD,EAAEwC,KAAK,SAASO,GACrB,OAAO,IAAI2M,EAAG3M,MAGlBkE,OAAQ,SAASvC,GACf,OAAOmJ,EAAqBmD,UAAW,iBAAkB,CAACtM,WAIxC,IAAXrE,GACTA,EAAOJ,QAAU4Q,EACjBxQ,EAAOJ,QAAQwB,QAAUpB,EAAOJ,SAGhC2H,KAAKR,IAAMyJ,EAlTf,IAsTE,KAAK,GAAG,CAAC,EAAE","file":"../restaurant_info_bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar dbPromise = _idb2.default.open('restaurants-db', 3, function (upgradeDb) {\n  switch (upgradeDb.oldVersion) {\n    case 0:\n      upgradeDb.createObjectStore('restaurants', { keyPath: 'id' });\n    case 1:\n      upgradeDb.createObjectStore('reviews', { keyPath: 'restaurant_id' });\n    case 2:\n      upgradeDb.createObjectStore('offline-reviews', { keyPath: 'restaurant_id' });\n  }\n});\n\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, null, [{\n    key: 'fetchRestaurants',\n\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n    value: function fetchRestaurants(callback) {\n\n      fetch(DBHelper.DATABASE_URL + '/restaurants').then(function (res) {\n        return res.json();\n      }).then(function (out) {\n        var restaurants = out;\n\n        if (navigator.serviceWorker) {\n          dbPromise.then(function (db) {\n            if (!db) return;\n\n            var tx = db.transaction('restaurants', 'readwrite');\n            var store = tx.objectStore('restaurants');\n\n            restaurants.forEach(function (restaurant) {\n              return store.put(restaurant);\n            });\n          });\n        }\n        callback(null, restaurants);\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }\n\n    /**\r\n     * Fetch restaurant's reviews by ID\r\n     */\n\n  }, {\n    key: 'fetchReviewsById',\n    value: function fetchReviewsById(id) {\n      return new Promise(function (resolve, reject) {\n\n        DBHelper.fetchIDBReviews().then(function (data) {\n\n          if (!navigator.onLine) {\n            resolve(data[0]);\n          } else {\n            fetch(DBHelper.DATABASE_URL + '/reviews/?restaurant_id=' + id).then(function (data) {\n              if (data.ok) {\n                return data.json();\n              }\n              reject(new Error('Error status code : ' + data.status));\n            }).then(function (data) {\n              DBHelper.updateRestaurantReview(data);\n              resolve(data);\n            }).catch(function (err) {\n              reject(err);\n            });\n          }\n        });\n      });\n    }\n\n    /**\r\n     * Get cached reviews from IDB\r\n     */\n\n  }, {\n    key: 'fetchIDBReviews',\n    value: function fetchIDBReviews() {\n\n      return dbPromise.then(function (db) {\n        if (!db) return db;\n\n        var tx = db.transaction('reviews');\n        var store = tx.objectStore('reviews');\n\n        return store.getAll();\n      });\n    }\n\n    /**\r\n     * Update restaurant's review\r\n     */\n\n  }, {\n    key: 'updateRestaurantReview',\n    value: function updateRestaurantReview(review) {\n      dbPromise.then(function (db) {\n        if (!db) return db;\n\n        var tx = db.transaction('reviews', 'readwrite');\n        var store = tx.objectStore('reviews');\n\n        review.restaurant_id = parseInt(review[0].restaurant_id);\n        store.put(review);\n\n        return tx.complete;\n      });\n    }\n\n    /**\r\n     * Save offline review\r\n     */\n\n  }, {\n    key: 'saveReviewOffline',\n    value: function saveReviewOffline(id, name, rating, comment) {\n      var offlineReview = { restaurant_id: id, name: name, rating: rating, comments: comment };\n\n      dbPromise.then(function (db) {\n        if (!db) return;\n\n        var tx = db.transaction('offline-reviews', 'readwrite');\n        var store = tx.objectStore('offline-reviews');\n\n        store.put(offlineReview);\n\n        return tx.complete;\n      });\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var restaurant = restaurants.find(function (r) {\n            return r.id == id;\n          });\n          if (restaurant) {\n            // Got the restaurant\n            callback(null, restaurant);\n          } else {\n            // Restaurant does not exist in the database\n            callback('Restaurant does not exist', null);\n          }\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'imageUrlForRestaurant',\n    value: function imageUrlForRestaurant(restaurant) {\n      return '/img/' + restaurant.photograph + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      var marker = new google.maps.Marker({\n        position: restaurant.latlng,\n        title: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant),\n        map: map,\n        animation: google.maps.Animation.DROP\n      });\n      return marker;\n    }\n\n    /**\r\n     * Post review\r\n     */\n\n  }, {\n    key: 'postReview',\n    value: function postReview(id, name, rating, comment) {\n\n      var post = { restaurant_id: id, name: name, rating: rating, comments: comment };\n      return new Promise(function (resolve, reject) {\n        fetch(DBHelper.DATABASE_URL + '/reviews', {\n          method: 'POST',\n          body: JSON.stringify(post)\n        }).then(function (response) {\n          if (response.ok) {\n            DBHelper.updateRestaurantReview(post);\n            resolve(response.json());\n          }\n          reject(new Error('ERROR, status code: ' + response.status));\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n\n    /**\r\n     * Post review after app becomes online\r\n     */\n\n  }, {\n    key: 'postReviewOffline',\n    value: function postReviewOffline(id) {\n      return new Promise(function (resolve, reject) {\n\n        dbPromise.then(function (db) {\n          if (!db) return;\n\n          var tx = db.transaction('offline-reviews');\n          var store = tx.objectStore('offline-reviews');\n\n          return store.get(id);\n        }).then(function (review) {\n          DBHelper.postReview(review.restaurant_id, review.name, review.rating, review.comments).then(function (data) {\n            dbPromise.then(function (db) {\n              var tx = db.transaction('offline-reviews', 'readwrite');\n              var store = tx.objectStore('offline-reviews');\n\n              store.delete(id);\n\n              return tx.complete;\n            });\n            resolve(data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        });\n      });\n    }\n\n    /**\r\n      * Send PUT request \r\n      */\n\n  }, {\n    key: 'putFavorite',\n    value: function putFavorite(restaurantId, isFavorite) {\n\n      if (isFavorite === 'false') {\n        isFavorite = true;\n      } else {\n        isFavorite = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        fetch(DBHelper.DATABASE_URL + '/restaurants/' + restaurantId + '/?is_favorite=' + isFavorite, {\n          method: 'PUT'\n        }).then(function (response) {\n          if (response.ok) {\n            resolve(response.json());\n          } else {\n            reject(new Error('ERROR, status code:  ' + res.status));\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'DATABASE_URL',\n\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n    get: function get() {\n      //const port = 80; // Port for development\n      var port = 1337; // Port for testing\n      return 'http://localhost:' + port;\n    }\n  }]);\n\n  return DBHelper;\n}();\n\nmodule.exports = DBHelper;\n\n},{\"idb\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar restaurant = void 0;\nvar map;\nvar reviews = void 0;\nvar interval = void 0;\n\n/**\r\n * Initialize Google map, called from HTML.\r\n */\nwindow.initMap = function () {\n  fetchRestaurantFromURL(function (error, restaurant) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      self.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      _dbhelper2.default.mapMarkerForRestaurant(self.restaurant, self.map);\n    }\n  });\n};\n\n/**\r\n * Get current restaurant from page URL.\r\n */\nvar fetchRestaurantFromURL = function fetchRestaurantFromURL(callback) {\n  if (self.restaurant) {\n    // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  var id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    _dbhelper2.default.fetchRestaurantById(id, function (error, restaurant) {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\nvar fillRestaurantHTML = function fillRestaurantHTML() {\n  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;\n\n  var name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  var address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  var image = document.getElementById('restaurant-img');\n  image.className = 'restaurant-img';\n  image.setAttribute(\"alt\", \"Image of \\\"\" + restaurant.name + \"\\\" restaurant\");\n\n  var undefined = _dbhelper2.default.imageUrlForRestaurant(restaurant).split('/').pop();\n\n  image.src = _dbhelper2.default.imageUrlForRestaurant(restaurant);\n  if (undefined.indexOf('undefined') >= 0) {\n    image.src = \"/img/placeholder.jpg\";\n  }\n\n  var cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  window.addEventListener('load', function () {\n    var map = document.getElementById(\"map\");\n    map.getElementsByTagName(\"iframe\")[0].title = restaurant.address;\n  });\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n};\n\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\nvar fillRestaurantHoursHTML = function fillRestaurantHoursHTML() {\n  var operatingHours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.operating_hours;\n\n  var hours = document.getElementById('restaurant-hours');\n  for (var key in operatingHours) {\n    var row = document.createElement('tr');\n\n    var day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    var time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\nvar fillReviewsHTML = function fillReviewsHTML() {\n  var container = document.getElementById('reviews-container');\n  var title = document.createElement('h3');\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n  var ul = void 0;\n  var id = getParameterByName('id');\n  _dbhelper2.default.fetchReviewsById(id).then(function (reviews) {\n    if (reviews.length == 0) {\n      var noReviews = document.createElement('p');\n      noReviews.innerHTML = 'No reviews yet. Be the first one!';\n      container.appendChild(noReviews);\n    } else {\n      ul = document.getElementById('reviews-list');\n      reviews.reverse().forEach(function (review) {\n        ul.appendChild(createReviewHTML(review));\n      });\n      container.appendChild(ul);\n    }\n\n    setReviewForm(container, reviews, ul);\n  }).catch(function (err) {\n    console.error(err);\n  });\n};\n\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\nvar createReviewHTML = function createReviewHTML(review) {\n  var li = document.createElement('li');\n  var name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  var date = document.createElement('p');\n  date.innerHTML = new Date(review.updatedAt).toDateString();\n  li.appendChild(date);\n\n  var rating = document.createElement('p');\n  rating.innerHTML = 'Rating: ' + review.rating;\n  li.appendChild(rating);\n\n  var comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n};\n\nvar setReviewForm = function setReviewForm(container, restaurant, ul) {\n  var form = document.createElement('form');\n  var textArea = document.createElement('textarea');\n  var sendButton = document.createElement('button');\n  var input = document.createElement('input');\n  var label = document.createElement('label');\n\n  label.setAttribute('for', 'name');\n  label.innerHTML = 'Post review';\n\n  input.type = 'text';\n  input.id = 'name';\n  input.placeholder = 'Your name';\n  input.required = true;\n\n  textArea.id = 'review-text';\n  textArea.placeholder = 'Post a review about this restaurant';\n  textArea.required = true;\n  textArea.setAttribute('aria-label', 'Post a review about this restaurant.');\n\n  sendButton.type = 'submit';\n  sendButton.innerHTML = 'Send';\n  sendButton.setAttribute('aria-label', 'Send');\n\n  form.id = 'review-form';\n\n  form.append(label);\n  form.append(input);\n  form.append(textArea);\n  form.append(ratingOptions());\n  form.append(sendButton);\n\n  container.appendChild(form);\n\n  setFormListener(form, restaurant.id, ul);\n};\n\n//Create rating options\nvar ratingOptions = function ratingOptions() {\n  var ratingDiv = document.createElement('div');\n  var label = document.createElement('label');\n  label.innerHTML = 'Rate restaurant: ';\n  ratingDiv.appendChild(label);\n  ratingDiv.classList.add('rating-container');\n  label.htmlFor = 'rating';\n\n  var rateList = document.createElement(\"select\");\n  rateList.id = \"rate\";\n  rateList.name = \"rating\";\n  rateList.required = true;\n  for (var i = 0; i <= 5; i++) {\n    var option = document.createElement(\"option\");\n    if (i === 0) {\n      option.value = '*';\n      option.text = '*';\n      option.selected = true;\n      rateList.appendChild(option);\n    } else {\n      option.value = i;\n      option.text = i;\n      rateList.appendChild(option);\n    }\n  }\n  ratingDiv.appendChild(rateList);\n\n  return ratingDiv;\n};\n\nvar setFormListener = function setFormListener(form, id, ul) {\n  form.addEventListener(\"submit\", function (event) {\n    event.preventDefault();\n    var name = stripHtmlTags(document.getElementById('name').value);\n    var reviewText = stripHtmlTags(document.getElementById('review-text').value);\n    var ratingValue = document.querySelector('#rate option:checked').value;\n    var rating = void 0;\n    if (ratingValue !== \"*\") {\n      rating = parseInt(ratingValue);\n    } else {\n      alert('Rate restaurant');\n      return;\n    }\n\n    var id = parseInt(getParameterByName('id'));\n    postReview(id, name, rating, reviewText, ul, form);\n  }, false);\n};\n\nfunction postReview(id, name, rating, reviewText, ul, form) {\n\n  if (navigator.onLine) {\n    _dbhelper2.default.postReview(id, name, rating, reviewText).then(function (data) {\n      form.reset();\n      alert('Review is posted.');\n      ul.insertBefore(createReviewHTML(data), ul.childNodes[0]);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  } else {\n    alert(\"Connection problem. Review will be posted after successful connection to the internet.\", 2000);\n    _dbhelper2.default.saveReviewOffline(id, name, rating, reviewText);\n    interval = setInterval(function () {\n      isOnline(id, ul, form);\n    }, 5000);\n  }\n}\n\nfunction isOnline(id, ul, form) {\n  if (navigator.onLine) {\n    alert(\"Sending review.\", 1000);\n    clearInterval(interval);\n    _dbhelper2.default.postReviewOffline(id).then(function (data) {\n      alert('Review is posted.');\n      form.reset();\n      ul.insertBefore(createReviewHTML(data), ul.childNodes[0]);\n    });\n  }\n}\n\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\nvar fillBreadcrumb = function fillBreadcrumb() {\n  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;\n\n  var breadcrumb = document.getElementById('breadcrumb');\n  var li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n};\n\n/**\r\n * Get a parameter by name from page URL.\r\n */\nvar getParameterByName = function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n/**\r\n * Strip html tags\r\n */\n\nvar stripHtmlTags = function stripHtmlTags(string) {\n  return string.replace(/(<([^>]+)>)/ig, \"\");\n};\n\n},{\"./dbhelper\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}]},{},[1,2]);\n"]}