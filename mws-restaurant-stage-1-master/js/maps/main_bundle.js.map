{"version":3,"sources":["main_bundle.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","obj","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_idb","dbPromise","__esModule","default","open","upgradeDb","oldVersion","createObjectStore","keyPath","DBHelper","instance","TypeError","_classCallCheck","this","value","callback","fetch","DATABASE_URL","then","res","json","out","restaurants","navigator","serviceWorker","db","store","transaction","objectStore","forEach","restaurant","put","catch","err","console","error","id","Promise","resolve","reject","fetchIDBReviews","data","onLine","ok","status","updateRestaurantReview","getAll","review","tx","restaurant_id","parseInt","complete","name","rating","comment","offlineReview","comments","fetchRestaurants","find","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","google","maps","Marker","position","latlng","title","url","urlForRestaurant","animation","Animation","DROP","post","method","body","JSON","stringify","response","get","postReview","delete","restaurantId","isFavorite","idb","2","_dbhelper","_dbhelper2","markers","document","addEventListener","event","fetchNeighborhoods","fetchCuisines","updateRestaurants","setEventListeners","getElementById","self","fillNeighborhoodsHTML","arguments","undefined","select","option","createElement","innerHTML","append","fillCuisinesHTML","window","initMap","Map","zoom","center","lat","lng","scrollwheel","getElementsByTagName","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","m","setMap","ul","createRestaurantHTML","addMarkersToMap","li","image","imageUrlForRestaurant","split","pop","className","setAttribute","src","address","more","favoriteBtn","is_favorite","classList","add","setFavorite","href","putFavorite","toggle","contains","alert","marker","mapMarkerForRestaurant","addListener","location","push","./dbhelper","3","promisifyRequest","request","onsuccess","result","onerror","promisifyRequestCall","args","apply","proxyProperties","ProxyClass","targetProp","properties","prop","set","val","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","arr","Array","slice","nativeObject","query","count","items","iterateCursor","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,aAEA,IAMgCK,EAN5BC,EAAe,WAAc,SAASC,EAAiBC,EAAQC,GAAS,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAMP,OAAQX,IAAK,CAAE,IAAImB,EAAaD,EAAMlB,GAAImB,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAAiB,OAAO,SAAUO,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYX,EAAiBU,EAAYG,UAAWF,GAAiBC,GAAaZ,EAAiBU,EAAaE,GAAqBF,GAA7gB,GAEfI,EAAO3B,EAAQ,OAQnB,IAAI4B,IAJ4BjB,EAFGgB,IAEkBhB,EAAIkB,WAAalB,EAAM,CAAEmB,QAASnB,IAIjEmB,QAAQC,KAAK,iBAAkB,EAAG,SAAUC,GAChE,OAAQA,EAAUC,YAChB,KAAK,EACHD,EAAUE,kBAAkB,cAAe,CAAEC,QAAS,OACxD,KAAK,EACHH,EAAUE,kBAAkB,UAAW,CAAEC,QAAS,kBACpD,KAAK,EACHH,EAAUE,kBAAkB,kBAAmB,CAAEC,QAAS,qBAI5DC,EAAW,WACb,SAASA,KAdX,SAAyBC,EAAUd,GAAe,KAAMc,aAAoBd,GAAgB,MAAM,IAAIe,UAAU,qCAe5GC,CAAgBC,KAAMJ,GA0ZxB,OAvZAxB,EAAawB,EAAU,KAAM,CAAC,CAC5Bd,IAAK,mBAMLmB,MAAO,SAA0BC,GAE/BC,MAAMP,EAASQ,aAAe,gBAAgBC,KAAK,SAAUC,GAC3D,OAAOA,EAAIC,SACVF,KAAK,SAAUG,GAChB,IAAIC,EAAcD,EAEdE,UAAUC,eACZvB,EAAUiB,KAAK,SAAUO,GACvB,GAAKA,EAAL,CAEA,IACIC,EADKD,EAAGE,YAAY,cAAe,aACxBC,YAAY,eAE3BN,EAAYO,QAAQ,SAAUC,GAC5B,OAAOJ,EAAMK,IAAID,QAIvBf,EAAS,KAAMO,KACdU,MAAM,SAAUC,GACjB,OAAOC,QAAQC,MAAMF,OAQxB,CACDtC,IAAK,mBACLmB,MAAO,SAA0BsB,GAC/B,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAEpC9B,EAAS+B,kBAAkBtB,KAAK,SAAUuB,GAEnClB,UAAUmB,OAGb1B,MAAMP,EAASQ,aAAe,2BAA6BmB,GAAIlB,KAAK,SAAUuB,GAC5E,GAAIA,EAAKE,GACP,OAAOF,EAAKrB,OAEdmB,EAAO,IAAI/D,MAAM,uBAAyBiE,EAAKG,WAC9C1B,KAAK,SAAUuB,GAChBhC,EAASoC,uBAAuBJ,GAChCH,EAAQG,KACPT,MAAM,SAAUC,GACjBM,EAAON,KAXTK,EAAQG,EAAK,UAsBpB,CACD9C,IAAK,kBACLmB,MAAO,WAEL,OAAOb,EAAUiB,KAAK,SAAUO,GAC9B,OAAKA,EAEIA,EAAGE,YAAY,WACTC,YAAY,WAEdkB,SALGrB,MAanB,CACD9B,IAAK,yBACLmB,MAAO,SAAgCiC,GACrC9C,EAAUiB,KAAK,SAAUO,GACvB,IAAKA,EAAI,OAAOA,EAEhB,IAAIuB,EAAKvB,EAAGE,YAAY,UAAW,aAC/BD,EAAQsB,EAAGpB,YAAY,WAK3B,OAHAmB,EAAOE,cAAgBC,SAASH,EAAO,GAAGE,eAC1CvB,EAAMK,IAAIgB,GAEHC,EAAGG,aAQb,CACDxD,IAAK,oBACLmB,MAAO,SAA2BsB,EAAIgB,EAAMC,EAAQC,GAClD,IAAIC,EAAgB,CAAEN,cAAeb,EAAIgB,KAAMA,EAAMC,OAAQA,EAAQG,SAAUF,GAE/ErD,EAAUiB,KAAK,SAAUO,GACvB,GAAKA,EAAL,CAEA,IAAIuB,EAAKvB,EAAGE,YAAY,kBAAmB,aAK3C,OAJYqB,EAAGpB,YAAY,mBAErBG,IAAIwB,GAEHP,EAAGG,cAQb,CACDxD,IAAK,sBACLmB,MAAO,SAA6BsB,EAAIrB,GAEtCN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CACL,IAAIL,EAAaR,EAAYoC,KAAK,SAAU7F,GAC1C,OAAOA,EAAEuE,IAAMA,IAEbN,EAEFf,EAAS,KAAMe,GAGff,EAAS,4BAA6B,WAU7C,CACDpB,IAAK,2BACLmB,MAAO,SAAkC6C,EAAS5C,GAEhDN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAIyB,EAAUtC,EAAYuC,OAAO,SAAUhG,GACzC,OAAOA,EAAEiG,cAAgBH,IAE3B5C,EAAS,KAAM6C,QASpB,CACDjE,IAAK,gCACLmB,MAAO,SAAuCiD,EAAchD,GAE1DN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAIyB,EAAUtC,EAAYuC,OAAO,SAAUhG,GACzC,OAAOA,EAAEkG,cAAgBA,IAE3BhD,EAAS,KAAM6C,QASpB,CACDjE,IAAK,0CACLmB,MAAO,SAAiD6C,EAASI,EAAchD,GAE7EN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CACL,IAAIyB,EAAUtC,EACC,OAAXqC,IAEFC,EAAUA,EAAQC,OAAO,SAAUhG,GACjC,OAAOA,EAAEiG,cAAgBH,KAGT,OAAhBI,IAEFH,EAAUA,EAAQC,OAAO,SAAUhG,GACjC,OAAOA,EAAEkG,cAAgBA,KAG7BhD,EAAS,KAAM6C,QASpB,CACDjE,IAAK,qBACLmB,MAAO,SAA4BC,GAEjCN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAI6B,EAAgB1C,EAAY2C,IAAI,SAAUC,EAAGhG,GAC/C,OAAOoD,EAAYpD,GAAG6F,eAGpBI,EAAsBH,EAAcH,OAAO,SAAUK,EAAGhG,GAC1D,OAAO8F,EAAcI,QAAQF,IAAMhG,IAErC6C,EAAS,KAAMoD,QASpB,CACDxE,IAAK,gBACLmB,MAAO,SAAuBC,GAE5BN,EAASgD,iBAAiB,SAAUtB,EAAOb,GACzC,GAAIa,EACFpB,EAASoB,EAAO,UACX,CAEL,IAAIkC,EAAW/C,EAAY2C,IAAI,SAAUC,EAAGhG,GAC1C,OAAOoD,EAAYpD,GAAG4F,eAGpBQ,EAAiBD,EAASR,OAAO,SAAUK,EAAGhG,GAChD,OAAOmG,EAASD,QAAQF,IAAMhG,IAEhC6C,EAAS,KAAMuD,QASpB,CACD3E,IAAK,mBACLmB,MAAO,SAA0BgB,GAC/B,MAAO,wBAA0BA,EAAWM,KAO7C,CACDzC,IAAK,wBACLmB,MAAO,SAA+BgB,GACpC,MAAO,QAAUA,EAAWyC,WAAa,SAO1C,CACD5E,IAAK,yBACLmB,MAAO,SAAgCgB,EAAYmC,GAQjD,OAPa,IAAIO,OAAOC,KAAKC,OAAO,CAClCC,SAAU7C,EAAW8C,OACrBC,MAAO/C,EAAWsB,KAClB0B,IAAKrE,EAASsE,iBAAiBjD,GAC/BmC,IAAKA,EACLe,UAAWR,OAAOC,KAAKQ,UAAUC,SASpC,CACDvF,IAAK,aACLmB,MAAO,SAAoBsB,EAAIgB,EAAMC,EAAQC,GAE3C,IAAI6B,EAAO,CAAElC,cAAeb,EAAIgB,KAAMA,EAAMC,OAAQA,EAAQG,SAAUF,GACtE,OAAO,IAAIjB,QAAQ,SAAUC,EAASC,GACpCvB,MAAMP,EAASQ,aAAe,WAAY,CACxCmE,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KACpBjE,KAAK,SAAUsE,GACZA,EAAS7C,KACXlC,EAASoC,uBAAuBsC,GAChC7C,EAAQkD,EAASpE,SAEnBmB,EAAO,IAAI/D,MAAM,uBAAyBgH,EAAS5C,WAClDZ,MAAM,SAAUC,GACjBM,EAAON,SASZ,CACDtC,IAAK,oBACLmB,MAAO,SAA2BsB,GAChC,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAEpCtC,EAAUiB,KAAK,SAAUO,GACvB,GAAKA,EAKL,OAHSA,EAAGE,YAAY,mBACTC,YAAY,mBAEd6D,IAAIrD,KAChBlB,KAAK,SAAU6B,GAChBtC,EAASiF,WAAW3C,EAAOE,cAAeF,EAAOK,KAAML,EAAOM,OAAQN,EAAOS,UAAUtC,KAAK,SAAUuB,GACpGxC,EAAUiB,KAAK,SAAUO,GACvB,IAAIuB,EAAKvB,EAAGE,YAAY,kBAAmB,aAK3C,OAJYqB,EAAGpB,YAAY,mBAErB+D,OAAOvD,GAENY,EAAGG,WAEZb,EAAQG,KACPT,MAAM,SAAUC,GACjBM,EAAON,WAUd,CACDtC,IAAK,cACLmB,MAAO,SAAqB8E,EAAcC,GAQxC,OALEA,EADiB,UAAfA,EAMG,IAAIxD,QAAQ,SAAUC,EAASC,GACpCvB,MAAMP,EAASQ,aAAe,gBAAkB2E,EAAe,iBAAmBC,EAAY,CAC5FT,OAAQ,QACPlE,KAAK,SAAUsE,GACZA,EAAS7C,GACXL,EAAQkD,EAASpE,QAEjBmB,EAAO,IAAI/D,MAAM,wBAA0B2C,IAAIyB,WAEhDZ,MAAM,SAAUC,GACjBM,EAAON,SAIZ,CACDtC,IAAK,eAML8F,IAAK,WAGH,MAAO,4BAIJhF,EA5ZM,GA+Zf1B,EAAOJ,QAAU8B,GAEf,CAACqF,IAAM,IAAIC,EAAE,CAAC,SAAS1H,EAAQU,EAAOJ,GACxC,aAEA,IAIgCK,EAJ5BgH,EAAY3H,EAAQ,cAEpB4H,GAE4BjH,EAFQgH,IAEahH,EAAIkB,WAAalB,EAAM,CAAEmB,QAASnB,GAEvF,IAGIiF,EAHA3C,OAAc,EAId4E,EAAU,GAKdC,SAASC,iBAAiB,mBAAoB,SAAUC,GACpDC,IACAC,IACAC,IACAC,MAMJ,IAAIA,EAAoB,WACKN,SAASO,eAAe,wBAC9BN,iBAAiB,SAAU,WAC1CI,MAGgBL,SAASO,eAAe,mBAC9BN,iBAAiB,SAAU,WACrCI,OAOJF,EAAqB,WACrBL,EAAW9F,QAAQmG,mBAAmB,SAAUnE,EAAO6B,GAC/C7B,EAEAD,QAAQC,MAAMA,IAEdwE,KAAK3C,cAAgBA,EACrB4C,QAQRA,EAAwB,WACxB,IAAI5C,EAAmC,EAAnB6C,UAAUhI,aAA+BiI,IAAjBD,UAAU,GAAmBA,UAAU,GAAKF,KAAK3C,cAEzF+C,EAASZ,SAASO,eAAe,wBACrC1C,EAAcnC,QAAQ,SAAUkC,GAC5B,IAAIiD,EAASb,SAASc,cAAc,UACpCD,EAAOE,UAAYnD,EACnBiD,EAAOlG,MAAQiD,EACfgD,EAAOI,OAAOH,MAOlBT,EAAgB,WAChBN,EAAW9F,QAAQoG,cAAc,SAAUpE,EAAOkC,GAC1ClC,EACAD,QAAQC,MAAMA,IAEdwE,KAAKtC,SAAWA,EAChB+C,QAQRA,EAAmB,WACnB,IAAI/C,EAA8B,EAAnBwC,UAAUhI,aAA+BiI,IAAjBD,UAAU,GAAmBA,UAAU,GAAKF,KAAKtC,SAEpF0C,EAASZ,SAASO,eAAe,mBAErCrC,EAASxC,QAAQ,SAAU8B,GACvB,IAAIqD,EAASb,SAASc,cAAc,UACpCD,EAAOE,UAAYvD,EACnBqD,EAAOlG,MAAQ6C,EACfoD,EAAOI,OAAOH,MAOtBK,OAAOC,QAAU,WAKbrD,EAAM,IAAIO,OAAOC,KAAK8C,IAAIpB,SAASO,eAAe,OAAQ,CACtDc,KAAM,GACNC,OANM,CACNC,IAAK,UACLC,KAAM,WAKNC,aAAa,EACb/C,MAAO,mBAGXwC,OAAOjB,iBAAiB,OAAQ,WAClBD,SAASO,eAAe,OAC9BmB,qBAAqB,UAAU,GAAGhD,MAAQ,oBAGlD2B,KAMJ,IAAIA,EAAoB,WACpB,IAAIsB,EAAU3B,SAASO,eAAe,mBAClCqB,EAAU5B,SAASO,eAAe,wBAElCsB,EAASF,EAAQG,cACjBC,EAASH,EAAQE,cAEjBtE,EAAUmE,EAAQE,GAAQlH,MAC1BiD,EAAegE,EAAQG,GAAQpH,MAEnCmF,EAAW9F,QAAQgI,wCAAwCxE,EAASI,EAAc,SAAU5B,EAAOb,GAC3Fa,EAEAD,QAAQC,MAAMA,IAEdiG,EAAiB9G,GACjB+G,QAQRD,EAAmB,SAA0B5C,GAE7CmB,KAAKrF,YAAc,GACV6E,SAASO,eAAe,oBAC9BQ,UAAY,GAGfhB,EAAQrE,QAAQ,SAAUyG,GACtB,OAAOA,EAAEC,OAAO,QAEpBrC,EAAU,GACV5E,EAAckE,GAMd6C,EAAsB,WACY,EAAnBxB,UAAUhI,aAA+BiI,IAAjBD,UAAU,IAAmBA,UAAU,GAA9E,IAEI2B,EAAKrC,SAASO,eAAe,oBACjCpF,EAAYO,QAAQ,SAAUC,GAC1B0G,EAAGrB,OAAOsB,EAAqB3G,MAEnC4G,KAMAD,EAAuB,SAA8B3G,GACrD,IAAI6G,EAAKxC,SAASc,cAAc,MAC5B2B,EAAQzC,SAASc,cAAc,OAC/BH,EAAYb,EAAW9F,QAAQ0I,sBAAsB/G,GAAYgH,MAAM,KAAKC,MAEhFH,EAAMI,UAAY,iBAClBJ,EAAMK,aAAa,MAAO,aAAgBnH,EAAWsB,KAAO,gBAC5DwF,EAAMM,IAAMjD,EAAW9F,QAAQ0I,sBAAsB/G,GAEf,GAAlCgF,EAAU1C,QAAQ,eAClBwE,EAAMM,IAAM,wBAGhBP,EAAGxB,OAAOyB,GACV,IAAIxF,EAAO+C,SAASc,cAAc,MAClC7D,EAAK8D,UAAYpF,EAAWsB,KAC5BuF,EAAGxB,OAAO/D,GAEV,IAAIW,EAAeoC,SAASc,cAAc,KAC1ClD,EAAamD,UAAYpF,EAAWiC,aACpC4E,EAAGxB,OAAOpD,GAEV,IAAIoF,EAAUhD,SAASc,cAAc,KACrCkC,EAAQjC,UAAYpF,EAAWqH,QAC/BR,EAAGxB,OAAOgC,GAEV,IAAIC,EAAOjD,SAASc,cAAc,KAC9BoC,EAAclD,SAASc,cAAc,UAsBzC,OArBAoC,EAAYJ,aAAa,OAAQ,UACH,SAA1BnH,EAAWwH,aAAoD,GAA1BxH,EAAWwH,aAChDD,EAAYnC,UAAY,WACxBmC,EAAYL,UAAY,oBACxBK,EAAYJ,aAAa,eAAgB,WAEzCI,EAAYL,UAAY,mBACxBL,EAAGY,UAAUC,IAAI,YACjBH,EAAYnC,UAAY,UACxBmC,EAAYJ,aAAa,eAAgB,SAE7CI,EAAYjD,iBAAiB,QAAS,WAClCqD,EAAY3H,EAAWM,GAAIuG,EAAIU,KAGnCD,EAAKlC,UAAY,eACjBkC,EAAKM,KAAOzD,EAAW9F,QAAQ4E,iBAAiBjD,GAChD6G,EAAGxB,OAAOiC,GACVT,EAAGxB,OAAOkC,GACVV,EAAGY,UAAUC,IAAI,UAEVb,GAMPc,EAAc,SAAqB7D,EAAc+C,EAAIU,GAErD,IAAIxD,EAAavE,EAAYsE,EAAe,GAAG0D,YAE/CrD,EAAW9F,QAAQwJ,YAAY/D,EAAcC,GAAY3E,KAAK,SAAUsE,GACpElE,EAAYkE,EAASpD,GAAK,GAAKoD,EAC/BmD,EAAGY,UAAUK,OAAO,YAChBjB,EAAGY,UAAUM,SAAS,aACtBR,EAAYJ,aAAa,eAAgB,QACzCI,EAAYnC,UAAY,UACxB4C,MAAM,mCAENT,EAAYnC,UAAY,WACxBmC,EAAYJ,aAAa,eAAgB,SACzCa,MAAM,wCAEX9H,MAAM,SAAUG,GACfD,QAAQC,MAAMA,MAMlBuG,EAAkB,YACgB,EAAnB7B,UAAUhI,aAA+BiI,IAAjBD,UAAU,GAAmBA,UAAU,GAAKvF,GAE1EO,QAAQ,SAAUC,GAEvB,IAAIiI,EAAS9D,EAAW9F,QAAQ6J,uBAAuBlI,EAAYmC,GACnEO,OAAOC,KAAK4B,MAAM4D,YAAYF,EAAQ,QAAS,WAC3C1C,OAAO6C,SAASR,KAAOK,EAAOjF,MAElCoB,EAAQiE,KAAKJ,OAInB,CAACK,aAAa,IAAIC,EAAE,CAAC,SAAShM,EAAQU,EAAOJ,GAC/C,cAEC,WAKC,SAAS2L,EAAiBC,GACxB,OAAO,IAAIlI,QAAQ,SAASC,EAASC,GACnCgI,EAAQC,UAAY,WAClBlI,EAAQiI,EAAQE,SAGlBF,EAAQG,QAAU,WAChBnI,EAAOgI,EAAQpI,UAKrB,SAASwI,EAAqB3L,EAAKoG,EAAQwF,GACzC,IAAIL,EACA7L,EAAI,IAAI2D,QAAQ,SAASC,EAASC,GAEpC+H,EADAC,EAAUvL,EAAIoG,GAAQyF,MAAM7L,EAAK4L,IACP1J,KAAKoB,EAASC,KAI1C,OADA7D,EAAE6L,QAAUA,EACL7L,EAWT,SAASoM,EAAgBC,EAAYC,EAAYC,GAC/CA,EAAWpJ,QAAQ,SAASqJ,GAC1BzL,OAAOC,eAAeqL,EAAWhL,UAAWmL,EAAM,CAChDzF,IAAK,WACH,OAAO5E,KAAKmK,GAAYE,IAE1BC,IAAK,SAASC,GACZvK,KAAKmK,GAAYE,GAAQE,OAMjC,SAASC,EAAoBN,EAAYC,EAAYpL,EAAaqL,GAChEA,EAAWpJ,QAAQ,SAASqJ,GACpBA,KAAQtL,EAAYG,YAC1BgL,EAAWhL,UAAUmL,GAAQ,WAC3B,OAAOP,EAAqB9J,KAAKmK,GAAaE,EAAMrE,eAK1D,SAASyE,EAAaP,EAAYC,EAAYpL,EAAaqL,GACzDA,EAAWpJ,QAAQ,SAASqJ,GACpBA,KAAQtL,EAAYG,YAC1BgL,EAAWhL,UAAUmL,GAAQ,WAC3B,OAAOrK,KAAKmK,GAAYE,GAAML,MAAMhK,KAAKmK,GAAanE,eAK5D,SAAS0E,EAA0BR,EAAYC,EAAYpL,EAAaqL,GACtEA,EAAWpJ,QAAQ,SAASqJ,GACpBA,KAAQtL,EAAYG,YAC1BgL,EAAWhL,UAAUmL,GAAQ,WAC3B,OA3C8BlM,EA2CI6B,KAAKmK,IA1CvCtM,EAAIiM,EAAqB3L,EA0C2BkM,EAAMrE,YAzCrD3F,KAAK,SAASJ,GACrB,GAAKA,EACL,OAAO,IAAI0K,EAAO1K,EAAOpC,EAAE6L,WAJ/B,IAAoCvL,EAC9BN,MA+CN,SAAS+M,EAAMC,GACb7K,KAAK8K,OAASD,EAuBhB,SAASF,EAAOI,EAAQrB,GACtB1J,KAAKgL,QAAUD,EACf/K,KAAKiL,SAAWvB,EA+BlB,SAASwB,EAAYrK,GACnBb,KAAKmL,OAAStK,EAuChB,SAASuK,EAAYC,GACnBrL,KAAKsL,IAAMD,EACXrL,KAAKsC,SAAW,IAAId,QAAQ,SAASC,EAASC,GAC5C2J,EAAeE,WAAa,WAC1B9J,KAEF4J,EAAexB,QAAU,WACvBnI,EAAO2J,EAAe/J,QAExB+J,EAAeG,QAAU,WACvB9J,EAAO2J,EAAe/J,UAkB5B,SAASmK,EAAU7K,EAAInB,EAAYqB,GACjCd,KAAK0L,IAAM9K,EACXZ,KAAKP,WAAaA,EAClBO,KAAKc,YAAc,IAAIsK,EAAYtK,GAkBrC,SAAS6K,EAAG/K,GACVZ,KAAK0L,IAAM9K,EA/IbqJ,EAAgBW,EAAO,SAAU,CAC/B,OACA,UACA,aACA,WAGFJ,EAAoBI,EAAO,SAAUgB,SAAU,CAC7C,MACA,SACA,SACA,aACA,UAGFlB,EAA0BE,EAAO,SAAUgB,SAAU,CACnD,aACA,kBAQF3B,EAAgBU,EAAQ,UAAW,CACjC,YACA,MACA,aACA,UAGFH,EAAoBG,EAAQ,UAAWkB,UAAW,CAChD,SACA,WAIF,CAAC,UAAW,WAAY,sBAAsB7K,QAAQ,SAAS8K,GACvDA,KAAcD,UAAU3M,YAC9ByL,EAAOzL,UAAU4M,GAAc,WAC7B,IAAIf,EAAS/K,KACT+J,EAAO/D,UACX,OAAOxE,QAAQC,UAAUpB,KAAK,WAE5B,OADA0K,EAAOC,QAAQc,GAAY9B,MAAMe,EAAOC,QAASjB,GAC1CN,EAAiBsB,EAAOE,UAAU5K,KAAK,SAASJ,GACrD,GAAKA,EACL,OAAO,IAAI0K,EAAO1K,EAAO8K,EAAOE,kBAUxCC,EAAYhM,UAAU6M,YAAc,WAClC,OAAO,IAAInB,EAAM5K,KAAKmL,OAAOY,YAAY/B,MAAMhK,KAAKmL,OAAQnF,aAG9DkF,EAAYhM,UAAU2L,MAAQ,WAC5B,OAAO,IAAID,EAAM5K,KAAKmL,OAAON,MAAMb,MAAMhK,KAAKmL,OAAQnF,aAGxDiE,EAAgBiB,EAAa,SAAU,CACrC,OACA,UACA,aACA,kBAGFV,EAAoBU,EAAa,SAAUc,eAAgB,CACzD,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGFtB,EAA0BQ,EAAa,SAAUc,eAAgB,CAC/D,aACA,kBAGFvB,EAAaS,EAAa,SAAUc,eAAgB,CAClD,gBAkBFZ,EAAYlM,UAAU6B,YAAc,WAClC,OAAO,IAAImK,EAAYlL,KAAKsL,IAAIvK,YAAYiJ,MAAMhK,KAAKsL,IAAKtF,aAG9DiE,EAAgBmB,EAAa,MAAO,CAClC,mBACA,SAGFX,EAAaW,EAAa,MAAOa,eAAgB,CAC/C,UASFR,EAAUvM,UAAUQ,kBAAoB,WACtC,OAAO,IAAIwL,EAAYlL,KAAK0L,IAAIhM,kBAAkBsK,MAAMhK,KAAK0L,IAAK1F,aAGpEiE,EAAgBwB,EAAW,MAAO,CAChC,OACA,UACA,qBAGFhB,EAAagB,EAAW,MAAOS,YAAa,CAC1C,oBACA,UAOFP,EAAGzM,UAAU4B,YAAc,WACzB,OAAO,IAAIsK,EAAYpL,KAAK0L,IAAI5K,YAAYkJ,MAAMhK,KAAK0L,IAAK1F,aAG9DiE,EAAgB0B,EAAI,MAAO,CACzB,OACA,UACA,qBAGFlB,EAAakB,EAAI,MAAOO,YAAa,CACnC,UAKF,CAAC,aAAc,iBAAiBlL,QAAQ,SAASmL,GAC/C,CAACjB,EAAaN,GAAO5J,QAAQ,SAASjC,GACpCA,EAAYG,UAAUiN,EAASC,QAAQ,OAAQ,YAAc,WAC3D,IApPWC,EAoPPtC,GApPOsC,EAoPQrG,UAnPhBsG,MAAMpN,UAAUqN,MAAMxO,KAAKsO,IAoP1BnM,EAAW6J,EAAKA,EAAK/L,OAAS,GAC9BwO,EAAexM,KAAKmL,QAAUnL,KAAK8K,OACnCpB,EAAU8C,EAAaL,GAAUnC,MAAMwC,EAAczC,EAAKwC,MAAM,GAAI,IACxE7C,EAAQC,UAAY,WAClBzJ,EAASwJ,EAAQE,cAOzB,CAACgB,EAAOM,GAAalK,QAAQ,SAASjC,GAChCA,EAAYG,UAAU+C,SAC1BlD,EAAYG,UAAU+C,OAAS,SAASwK,EAAOC,GAC7C,IAAI7M,EAAWG,KACX2M,EAAQ,GAEZ,OAAO,IAAInL,QAAQ,SAASC,GAC1B5B,EAAS+M,cAAcH,EAAO,SAAS1B,GAChCA,GAIL4B,EAAMrD,KAAKyB,EAAO9K,YAEJgG,IAAVyG,GAAuBC,EAAM3O,QAAU0O,EAI3C3B,EAAO8B,WAHLpL,EAAQkL,IANRlL,EAAQkL,WAelB,IAAIG,EAAM,CACRvN,KAAM,SAASgD,EAAMwK,EAASC,GAC5B,IAAInP,EAAIiM,EAAqBmD,UAAW,OAAQ,CAAC1K,EAAMwK,IACnDrD,EAAU7L,EAAE6L,QAQhB,OANAA,EAAQwD,gBAAkB,SAAS1H,GAC7BwH,GACFA,EAAgB,IAAIvB,EAAU/B,EAAQE,OAAQpE,EAAM/F,WAAYiK,EAAQ5I,eAIrEjD,EAAEwC,KAAK,SAASO,GACrB,OAAO,IAAI+K,EAAG/K,MAGlBkE,OAAQ,SAASvC,GACf,OAAOuH,EAAqBmD,UAAW,iBAAkB,CAAC1K,WAIxC,IAAXrE,GACTA,EAAOJ,QAAUgP,EACjB5O,EAAOJ,QAAQwB,QAAUpB,EAAOJ,SAGhCgI,KAAKb,IAAM6H,EAlTf,IAsTE,KAAK,GAAG,CAAC,EAAE","file":"../main_bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar dbPromise = _idb2.default.open('restaurants-db', 3, function (upgradeDb) {\n  switch (upgradeDb.oldVersion) {\n    case 0:\n      upgradeDb.createObjectStore('restaurants', { keyPath: 'id' });\n    case 1:\n      upgradeDb.createObjectStore('reviews', { keyPath: 'restaurant_id' });\n    case 2:\n      upgradeDb.createObjectStore('offline-reviews', { keyPath: 'restaurant_id' });\n  }\n});\n\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, null, [{\n    key: 'fetchRestaurants',\n\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n    value: function fetchRestaurants(callback) {\n\n      fetch(DBHelper.DATABASE_URL + '/restaurants').then(function (res) {\n        return res.json();\n      }).then(function (out) {\n        var restaurants = out;\n\n        if (navigator.serviceWorker) {\n          dbPromise.then(function (db) {\n            if (!db) return;\n\n            var tx = db.transaction('restaurants', 'readwrite');\n            var store = tx.objectStore('restaurants');\n\n            restaurants.forEach(function (restaurant) {\n              return store.put(restaurant);\n            });\n          });\n        }\n        callback(null, restaurants);\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }\n\n    /**\r\n     * Fetch restaurant's reviews by ID\r\n     */\n\n  }, {\n    key: 'fetchReviewsById',\n    value: function fetchReviewsById(id) {\n      return new Promise(function (resolve, reject) {\n\n        DBHelper.fetchIDBReviews().then(function (data) {\n\n          if (!navigator.onLine) {\n            resolve(data[0]);\n          } else {\n            fetch(DBHelper.DATABASE_URL + '/reviews/?restaurant_id=' + id).then(function (data) {\n              if (data.ok) {\n                return data.json();\n              }\n              reject(new Error('Error status code : ' + data.status));\n            }).then(function (data) {\n              DBHelper.updateRestaurantReview(data);\n              resolve(data);\n            }).catch(function (err) {\n              reject(err);\n            });\n          }\n        });\n      });\n    }\n\n    /**\r\n     * Get cached reviews from IDB\r\n     */\n\n  }, {\n    key: 'fetchIDBReviews',\n    value: function fetchIDBReviews() {\n\n      return dbPromise.then(function (db) {\n        if (!db) return db;\n\n        var tx = db.transaction('reviews');\n        var store = tx.objectStore('reviews');\n\n        return store.getAll();\n      });\n    }\n\n    /**\r\n     * Update restaurant's review\r\n     */\n\n  }, {\n    key: 'updateRestaurantReview',\n    value: function updateRestaurantReview(review) {\n      dbPromise.then(function (db) {\n        if (!db) return db;\n\n        var tx = db.transaction('reviews', 'readwrite');\n        var store = tx.objectStore('reviews');\n\n        review.restaurant_id = parseInt(review[0].restaurant_id);\n        store.put(review);\n\n        return tx.complete;\n      });\n    }\n\n    /**\r\n     * Save offline review\r\n     */\n\n  }, {\n    key: 'saveReviewOffline',\n    value: function saveReviewOffline(id, name, rating, comment) {\n      var offlineReview = { restaurant_id: id, name: name, rating: rating, comments: comment };\n\n      dbPromise.then(function (db) {\n        if (!db) return;\n\n        var tx = db.transaction('offline-reviews', 'readwrite');\n        var store = tx.objectStore('offline-reviews');\n\n        store.put(offlineReview);\n\n        return tx.complete;\n      });\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var restaurant = restaurants.find(function (r) {\n            return r.id == id;\n          });\n          if (restaurant) {\n            // Got the restaurant\n            callback(null, restaurant);\n          } else {\n            // Restaurant does not exist in the database\n            callback('Restaurant does not exist', null);\n          }\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'imageUrlForRestaurant',\n    value: function imageUrlForRestaurant(restaurant) {\n      return '/img/' + restaurant.photograph + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      var marker = new google.maps.Marker({\n        position: restaurant.latlng,\n        title: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant),\n        map: map,\n        animation: google.maps.Animation.DROP\n      });\n      return marker;\n    }\n\n    /**\r\n     * Post review\r\n     */\n\n  }, {\n    key: 'postReview',\n    value: function postReview(id, name, rating, comment) {\n\n      var post = { restaurant_id: id, name: name, rating: rating, comments: comment };\n      return new Promise(function (resolve, reject) {\n        fetch(DBHelper.DATABASE_URL + '/reviews', {\n          method: 'POST',\n          body: JSON.stringify(post)\n        }).then(function (response) {\n          if (response.ok) {\n            DBHelper.updateRestaurantReview(post);\n            resolve(response.json());\n          }\n          reject(new Error('ERROR, status code: ' + response.status));\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n\n    /**\r\n     * Post review after app becomes online\r\n     */\n\n  }, {\n    key: 'postReviewOffline',\n    value: function postReviewOffline(id) {\n      return new Promise(function (resolve, reject) {\n\n        dbPromise.then(function (db) {\n          if (!db) return;\n\n          var tx = db.transaction('offline-reviews');\n          var store = tx.objectStore('offline-reviews');\n\n          return store.get(id);\n        }).then(function (review) {\n          DBHelper.postReview(review.restaurant_id, review.name, review.rating, review.comments).then(function (data) {\n            dbPromise.then(function (db) {\n              var tx = db.transaction('offline-reviews', 'readwrite');\n              var store = tx.objectStore('offline-reviews');\n\n              store.delete(id);\n\n              return tx.complete;\n            });\n            resolve(data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        });\n      });\n    }\n\n    /**\r\n      * Send PUT request \r\n      */\n\n  }, {\n    key: 'putFavorite',\n    value: function putFavorite(restaurantId, isFavorite) {\n\n      if (isFavorite === 'false') {\n        isFavorite = true;\n      } else {\n        isFavorite = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        fetch(DBHelper.DATABASE_URL + '/restaurants/' + restaurantId + '/?is_favorite=' + isFavorite, {\n          method: 'PUT'\n        }).then(function (response) {\n          if (response.ok) {\n            resolve(response.json());\n          } else {\n            reject(new Error('ERROR, status code:  ' + res.status));\n          }\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'DATABASE_URL',\n\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n    get: function get() {\n      //const port = 80; // Port for development\n      var port = 1337; // Port for testing\n      return 'http://localhost:' + port;\n    }\n  }]);\n\n  return DBHelper;\n}();\n\nmodule.exports = DBHelper;\n\n},{\"idb\":3}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar restaurants = void 0,\n    neighborhoods = void 0,\n    cuisines = void 0;\nvar map;\nvar markers = [];\n\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\ndocument.addEventListener('DOMContentLoaded', function (event) {\n    fetchNeighborhoods();\n    fetchCuisines();\n    updateRestaurants();\n    setEventListeners();\n});\n\n/**\r\n * Set event listeners for filter changing\r\n */\nvar setEventListeners = function setEventListeners() {\n    var neighborHoodSelect = document.getElementById('neighborhoods-select');\n    neighborHoodSelect.addEventListener('change', function () {\n        updateRestaurants();\n    });\n\n    var cuisineSelect = document.getElementById('cuisines-select');\n    cuisineSelect.addEventListener('change', function () {\n        updateRestaurants();\n    });\n};\n\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\nvar fetchNeighborhoods = function fetchNeighborhoods() {\n    _dbhelper2.default.fetchNeighborhoods(function (error, neighborhoods) {\n        if (error) {\n            // Got an error\n            console.error(error);\n        } else {\n            self.neighborhoods = neighborhoods;\n            fillNeighborhoodsHTML();\n        }\n    });\n};\n\n/**\r\n * Set neighborhoods HTML.\r\n */\nvar fillNeighborhoodsHTML = function fillNeighborhoodsHTML() {\n    var neighborhoods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.neighborhoods;\n\n    var select = document.getElementById('neighborhoods-select');\n    neighborhoods.forEach(function (neighborhood) {\n        var option = document.createElement('option');\n        option.innerHTML = neighborhood;\n        option.value = neighborhood;\n        select.append(option);\n    });\n};\n\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\nvar fetchCuisines = function fetchCuisines() {\n    _dbhelper2.default.fetchCuisines(function (error, cuisines) {\n        if (error) {\n            console.error(error);\n        } else {\n            self.cuisines = cuisines;\n            fillCuisinesHTML();\n        }\n    });\n};\n\n/**\r\n * Set cuisines HTML.\r\n */\nvar fillCuisinesHTML = function fillCuisinesHTML() {\n    var cuisines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.cuisines;\n\n    var select = document.getElementById('cuisines-select');\n\n    cuisines.forEach(function (cuisine) {\n        var option = document.createElement('option');\n        option.innerHTML = cuisine;\n        option.value = cuisine;\n        select.append(option);\n    });\n};\n\n/**\r\n * Initialize Google map, called from HTML.\r\n */\nwindow.initMap = function () {\n    var loc = {\n        lat: 40.722216,\n        lng: -73.987501\n    };\n    map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 12,\n        center: loc,\n        scrollwheel: false,\n        title: \"Restaurant Map\"\n    });\n\n    window.addEventListener('load', function () {\n        var map = document.getElementById(\"map\");\n        map.getElementsByTagName(\"iframe\")[0].title = \"Restaurants map\";\n    });\n\n    updateRestaurants();\n};\n\n/**\r\n * Update page and map for current restaurants.\r\n */\nvar updateRestaurants = function updateRestaurants() {\n    var cSelect = document.getElementById('cuisines-select');\n    var nSelect = document.getElementById('neighborhoods-select');\n\n    var cIndex = cSelect.selectedIndex;\n    var nIndex = nSelect.selectedIndex;\n\n    var cuisine = cSelect[cIndex].value;\n    var neighborhood = nSelect[nIndex].value;\n\n    _dbhelper2.default.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, function (error, restaurants) {\n        if (error) {\n            // Got an error!\n            console.error(error);\n        } else {\n            resetRestaurants(restaurants);\n            fillRestaurantsHTML();\n        }\n    });\n};\n\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\nvar resetRestaurants = function resetRestaurants(response) {\n    // Remove all restaurants\n    self.restaurants = [];\n    var ul = document.getElementById('restaurants-list');\n    ul.innerHTML = '';\n\n    // Remove all map markers\n    markers.forEach(function (m) {\n        return m.setMap(null);\n    });\n    markers = [];\n    restaurants = response;\n};\n\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\nvar fillRestaurantsHTML = function fillRestaurantsHTML() {\n    var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : restaurants;\n\n    var ul = document.getElementById('restaurants-list');\n    restaurants.forEach(function (restaurant) {\n        ul.append(createRestaurantHTML(restaurant));\n    });\n    addMarkersToMap();\n};\n\n/**\r\n * Create restaurant HTML.\r\n */\nvar createRestaurantHTML = function createRestaurantHTML(restaurant) {\n    var li = document.createElement('li');\n    var image = document.createElement('img');\n    var undefined = _dbhelper2.default.imageUrlForRestaurant(restaurant).split('/').pop();\n\n    image.className = 'restaurant-img';\n    image.setAttribute(\"alt\", \"Image of \\\"\" + restaurant.name + \"\\\" restaurant\");\n    image.src = _dbhelper2.default.imageUrlForRestaurant(restaurant);\n\n    if (undefined.indexOf('undefined') >= 0) {\n        image.src = \"/img/placeholder.jpg\";\n    }\n\n    li.append(image);\n    var name = document.createElement('h2');\n    name.innerHTML = restaurant.name;\n    li.append(name);\n\n    var neighborhood = document.createElement('p');\n    neighborhood.innerHTML = restaurant.neighborhood;\n    li.append(neighborhood);\n\n    var address = document.createElement('p');\n    address.innerHTML = restaurant.address;\n    li.append(address);\n\n    var more = document.createElement('a');\n    var favoriteBtn = document.createElement('button');\n    favoriteBtn.setAttribute('role', 'switch');\n    if (restaurant.is_favorite == 'false' || restaurant.is_favorite == false) {\n        favoriteBtn.innerHTML = 'Favorite';\n        favoriteBtn.className = 'favoriteBtn false';\n        favoriteBtn.setAttribute('aria-checked', \"false\");\n    } else {\n        favoriteBtn.className = 'favoriteBtn true';\n        li.classList.add('favorite');\n        favoriteBtn.innerHTML = 'Dislike';\n        favoriteBtn.setAttribute('aria-checked', \"true\");\n    }\n    favoriteBtn.addEventListener('click', function () {\n        setFavorite(restaurant.id, li, favoriteBtn);\n    });\n\n    more.innerHTML = 'View Details';\n    more.href = _dbhelper2.default.urlForRestaurant(restaurant);\n    li.append(more);\n    li.append(favoriteBtn);\n    li.classList.add('hidden');\n\n    return li;\n};\n\n/**\r\n * Handle favorite  \r\n */\nvar setFavorite = function setFavorite(restaurantId, li, favoriteBtn) {\n\n    var isFavorite = restaurants[restaurantId - 1].is_favorite;\n\n    _dbhelper2.default.putFavorite(restaurantId, isFavorite).then(function (response) {\n        restaurants[response.id - 1] = response;\n        li.classList.toggle('favorite');\n        if (li.classList.contains('favorite')) {\n            favoriteBtn.setAttribute('aria-checked', \"true\");\n            favoriteBtn.innerHTML = 'Dislike';\n            alert('Restaurant added to favorites');\n        } else {\n            favoriteBtn.innerHTML = 'Favorite';\n            favoriteBtn.setAttribute('aria-checked', \"false\");\n            alert('Restaurant removed from favorites');\n        }\n    }).catch(function (error) {\n        console.error(error);\n    });\n};\n/**\r\n * Add markers for current restaurants to the map.\r\n */\nvar addMarkersToMap = function addMarkersToMap() {\n    var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : restaurants;\n\n    response.forEach(function (restaurant) {\n        // Add marker to the map\n        var marker = _dbhelper2.default.mapMarkerForRestaurant(restaurant, map);\n        google.maps.event.addListener(marker, 'click', function () {\n            window.location.href = marker.url;\n        });\n        markers.push(marker);\n    });\n};\n\n},{\"./dbhelper\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}]},{},[1,2]);\n"]}